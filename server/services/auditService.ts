import HmppsAuditClient, { AuditEvent } from '../data/hmppsAuditClient'

export enum Page {
  NOT_FOUND = 'NOT_FOUND',
  ERROR = 'ERROR',
  SEARCH = 'SEARCH',
  PROFILE_OVERVIEW = 'PROFILE_OVERVIEW',
  PROFILE_SUPPORT_STRATEGIES = 'PROFILE_SUPPORT_STRATEGIES',
  PROFILE_CHALLENGES = 'PROFILE_CHALLENGES',
  PROFILE_STRENGTHS = 'PROFILE_STRENGTHS',
  PROFILE_CONDITIONS = 'PROFILE_CONDITIONS',
  PROFILE_EDUCATION_SUPPORT_PLAN = 'PROFILE_EDUCATION_SUPPORT_PLAN',
  CREATE_ELSP_WHO_CREATED_PLAN = 'CREATE_ELSP_WHO_CREATED_PLAN',
  CREATE_ELSP_OTHER_PEOPLE_CONSULTED = 'CREATE_ELSP_OTHER_PEOPLE_CONSULTED',
  CREATE_ELSP_OTHER_PEOPLE_CONSULTED_ADD_PERSON = 'CREATE_ELSP_OTHER_PEOPLE_CONSULTED_ADD_PERSON',
  CREATE_ELSP_OTHER_PEOPLE_CONSULTED_LIST = 'CREATE_ELSP_OTHER_PEOPLE_CONSULTED_LIST',
  CREATE_ELSP_REVIEW_EXISTING_NEEDS = 'CREATE_ELSP_REVIEW_EXISTING_NEEDS',
  CREATE_ELSP_REVIEW_EXISTING_STRENGTHS = 'CREATE_ELSP_REVIEW_EXISTING_STRENGTHS',
  CREATE_ELSP_REVIEW_EXISTING_CHALLENGES = 'CREATE_ELSP_REVIEW_EXISTING_CHALLENGES',
  CREATE_ELSP_REVIEW_EXISTING_CONDITIONS = 'CREATE_ELSP_REVIEW_EXISTING_CONDITIONS',
  CREATE_ELSP_REVIEW_EXISTING_SUPPORT_STRATEGIES = 'CREATE_ELSP_REVIEW_EXISTING_SUPPORT_STRATEGIES',
  CREATE_ELSP_INDIVIDUAL_SUPPORT_REQUIREMENTS = 'CREATE_ELSP_INDIVIDUAL_SUPPORT_REQUIREMENTS',
  CREATE_ELSP_TEACHING_ADJUSTMENTS = 'CREATE_ELSP_TEACHING_ADJUSTMENTS',
  CREATE_ELSP_SPECIFIC_TEACHING_SKILLS = 'CREATE_ELSP_SPECIFIC_TEACHING_SKILLS',
  CREATE_ELSP_EXAM_ARRANGEMENTS = 'CREATE_ELSP_EXAM_ARRANGEMENTS',
  CREATE_ELSP_EDUCATION_HEALTH_CARE_PLAN = 'CREATE_ELSP_EDUCATION_HEALTH_CARE_PLAN',
  CREATE_ELSP_LNSP_SUPPORT = 'CREATE_ELSP_LNSP_SUPPORT',
  CREATE_ELSP_ADDITIONAL_INFORMATION = 'CREATE_ELSP_ADDITIONAL_INFORMATION',
  CREATE_ELSP_SET_REVIEW_DATE = 'CREATE_ELSP_SET_REVIEW_DATE',
  CREATE_ELSP_CHECK_YOUR_ANSWERS = 'CREATE_ELSP_CHECK_YOUR_ANSWERS',
  REFUSE_ELSP_REASON = 'REFUSE_ELSP_REASON',
  CREATE_STRENGTH_CATEGORY = 'CREATE_STRENGTH_CATEGORY',
  CREATE_STRENGTH_DETAILS = 'CREATE_STRENGTH_DETAILS',
  CREATE_CHALLENGE_CATEGORY = 'CREATE_CHALLENGE_CATEGORY',
  CREATE_CHALLENGE_DETAILS = 'CREATE_CHALLENGE_DETAILS',
  CREATE_SUPPORT_STRATEGY_CATEGORY = 'CREATE_SUPPORT_STRATEGY_CATEGORY',
  CREATE_SUPPORT_STRATEGY_DETAILS = 'CREATE_SUPPORT_STRATEGY_DETAILS',
  RECORD_ALN_SCREENER_DATE = 'RECORD_ALN_SCREENER_DATE',
  RECORD_ALN_SCREENER_CHALLENGES = 'RECORD_ALN_SCREENER_CHALLENGES',
  RECORD_ALN_SCREENER_STRENGTHS = 'RECORD_ALN_SCREENER_STRENGTHS',
  RECORD_ALN_SCREENER_CHECK_YOUR_ANSWERS = 'RECORD_ALN_SCREENER_CHECK_YOUR_ANSWERS',
  CREATE_CONDITIONS_SELECT_CONDITIONS = 'CREATE_CONDITIONS_SELECT_CONDITIONS',
  CREATE_CONDITIONS_DETAILS = 'CREATE_CONDITIONS_DETAILS',
}

enum AuditableUserAction {
  PAGE_VIEW_ATTEMPT = 'PAGE_VIEW_ATTEMPT',
  PAGE_VIEW = 'PAGE_VIEW',
  CREATE_EDUCATION_LEARNER_SUPPORT_PLAN = 'CREATE_EDUCATION_LEARNER_SUPPORT_PLAN',
  REVIEW_EDUCATION_LEARNER_SUPPORT_PLAN = 'REVIEW_EDUCATION_LEARNER_SUPPORT_PLAN',
  UPDATE_EDUCATION_LEARNER_SUPPORT_PLAN_SCHEDULE = 'UPDATE_EDUCATION_LEARNER_SUPPORT_PLAN_SCHEDULE',
  RECORD_ALN_SCREENER = 'RECORD_ALN_SCREENER',
  CREATE_STRENGTH = 'CREATE_STRENGTH',
  CREATE_CHALLENGE = 'CREATE_CHALLENGE',
  CREATE_CONDITION = 'CREATE_CONDITION',
  CREATE_SUPPORT_STRATEGY = 'CREATE_SUPPORT_STRATEGY',
}

export interface BaseAuditData {
  who: string
  subjectId?: string
  subjectType?: string
  correlationId?: string
  details?: object
}

export default class AuditService {
  constructor(private readonly hmppsAuditClient: HmppsAuditClient) {}

  async logAuditEvent(event: AuditEvent) {
    return this.hmppsAuditClient.sendMessage(event, false)
  }

  async logPageViewAttempt(page: Page, eventDetails: BaseAuditData) {
    const event: AuditEvent = {
      ...eventDetails,
      what: `${AuditableUserAction.PAGE_VIEW_ATTEMPT}_${page}`,
    }
    return this.logAuditEvent(event)
  }

  async logPageView(page: Page, eventDetails: BaseAuditData) {
    const event: AuditEvent = {
      ...eventDetails,
      what: `${AuditableUserAction.PAGE_VIEW}_${page}`,
    }
    return this.logAuditEvent(event)
  }

  async logCreateEducationLearnerSupportPlan(baseAuditData: BaseAuditData) {
    return this.logAuditEvent({
      ...baseAuditData,
      what: AuditableUserAction.CREATE_EDUCATION_LEARNER_SUPPORT_PLAN,
    })
  }

  async logReviewEducationLearnerSupportPlan(baseAuditData: BaseAuditData) {
    return this.logAuditEvent({
      ...baseAuditData,
      what: AuditableUserAction.REVIEW_EDUCATION_LEARNER_SUPPORT_PLAN,
    })
  }

  async logCreateStrength(baseAuditData: BaseAuditData) {
    return this.logAuditEvent({
      ...baseAuditData,
      what: AuditableUserAction.CREATE_STRENGTH,
    })
  }

  async logCreateChallenge(baseAuditData: BaseAuditData) {
    return this.logAuditEvent({
      ...baseAuditData,
      what: AuditableUserAction.CREATE_CHALLENGE,
    })
  }

  async logCreateCondition(baseAuditData: BaseAuditData) {
    return this.logAuditEvent({
      ...baseAuditData,
      what: AuditableUserAction.CREATE_CONDITION,
    })
  }

  async logCreateSupportStrategy(baseAuditData: BaseAuditData) {
    return this.logAuditEvent({
      ...baseAuditData,
      what: AuditableUserAction.CREATE_SUPPORT_STRATEGY,
    })
  }

  async logRecordAlnScreener(baseAuditData: BaseAuditData) {
    return this.logAuditEvent({
      ...baseAuditData,
      what: AuditableUserAction.RECORD_ALN_SCREENER,
    })
  }

  async logUpdateEducationLearnerSupportPlanAsRefused(baseAuditData: BaseAuditData) {
    return this.logAuditEvent({
      ...baseAuditData,
      what: AuditableUserAction.UPDATE_EDUCATION_LEARNER_SUPPORT_PLAN_SCHEDULE,
    })
  }
}
