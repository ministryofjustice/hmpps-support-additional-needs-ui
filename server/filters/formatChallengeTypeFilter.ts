import ChallengeType from '../enums/challengeType'

const challengeTypeScreenValues = new Map<ChallengeType, string>([
  // Broad/category level Challenge Types
  [ChallengeType.SENSORY, 'Sensory'],
  [ChallengeType.EMOTIONS_FEELINGS_DEFAULT, 'Emotions and feelings'],
  [ChallengeType.PHYSICAL_SKILLS_DEFAULT, 'Physical skills and coordination'],
  [ChallengeType.LITERACY_SKILLS_DEFAULT, 'Literacy skills'],
  [ChallengeType.NUMERACY_SKILLS_DEFAULT, 'Numeracy skills'],
  [ChallengeType.ATTENTION_ORGANISING_TIME_DEFAULT, 'Attention, organising and time management'],
  [ChallengeType.LANGUAGE_COMM_SKILLS_DEFAULT, 'Language and communication skills'],
  [ChallengeType.PROCESSING_SPEED, 'Processing speed'],
  [ChallengeType.MEMORY, 'Memory'],

  // More specific Challenge Types
  [ChallengeType.HANDWRITING, 'Handwriting'],
  [ChallengeType.TURN_TAKING, 'Turn taking'],
  [ChallengeType.READING, 'Reading'],
  [ChallengeType.SPEED_OF_CALCULATION, 'Speed of calculation'],
  [ChallengeType.RESTFULNESS, 'Restfulness'],
  [ChallengeType.AUDITORY_DISCRIMINATION, 'Auditory discrimination'],
  [ChallengeType.FOCUSING, 'Focusing'],
  [ChallengeType.ARITHMETIC, 'Arithmetic'],
  [ChallengeType.SPELLING, 'Spelling'],
  [ChallengeType.READING_EMOTIONS, 'Reading emotions'],
  [ChallengeType.LANGUAGE_FLUENCY, 'Language fluency'],
  [ChallengeType.TIDINESS, 'Tidiness'],
  [ChallengeType.BALANCE, 'Balance'],
  [ChallengeType.CREATIVITY, 'Creativity'],
  [ChallengeType.FINE_MOTOR_SKILLS, 'Fine motor skills'],
  [ChallengeType.EMPATHY, 'Empathy'],
  [ChallengeType.ESTIMATION, 'Estimation'],
  [ChallengeType.WRITING, 'Writing'],
  [ChallengeType.FINISHING_TASKS, 'Finishing tasks'],
  [ChallengeType.SOCIAL_ADAPTABILITY, 'Social adaptability'],
  [ChallengeType.LISTENING, 'Listening'],
  [ChallengeType.COMMUNICATION, 'Communication'],
  [ChallengeType.IMPULSE_CONTROL, 'Impulse control'],
  [ChallengeType.MATHS_LITERACY, 'Maths literacy'],
  [ChallengeType.LEARNING_NEW_SKILLS, 'Learning new skills'],
  [ChallengeType.SENSORY_PROCESSING, 'Sensory processing'],
  [ChallengeType.ALPHABET_ORDERING, 'Alphabet ordering'],
  [ChallengeType.PROBLEM_SOLVING, 'Problem solving'],
  [ChallengeType.TASK_INITIATION, 'Task initiation'],
  [ChallengeType.EXTROVERSION_INTROVERSION, 'Extroversion/introversion'],
  [ChallengeType.READING_COMPREHENSION, 'Reading comprehension'],
  [ChallengeType.VISUAL_SKILLS, 'Visual skills'],
  [ChallengeType.EMOTIONAL_CONTROL, 'Emotional control'],
  [ChallengeType.MATHS_CONFIDENCE, 'Maths confidence'],
  [ChallengeType.SPORTING_BALL_SKILLS, 'Sporting ball skills'],
  [ChallengeType.VISUAL_SPATIAL_SKILLS, 'Visual spatial skills'],
  [ChallengeType.READING_VISUAL_DISCRIMINATION, 'Reading (visual discrimination)'],
  [ChallengeType.FRACTIONS_PERCENTAGES, 'Fractions and percentages'],
  [ChallengeType.TIME_ALLOCATION, 'Time allocation/prioritisation'],
  [ChallengeType.SOCIAL_NUANCES, 'Social nuances'],
  [ChallengeType.MANAGING_CHANGE, 'Managing change (adaptability)'],
  [ChallengeType.DUAL_TASKING, 'Dual tasking'],
  [ChallengeType.CONFIDENCE, 'Confidence'],
  [ChallengeType.TRACKING, 'Tracking'],
  [ChallengeType.FOLDING_PACKING_SORTING, 'Folding, packing, and sorting'],
  [ChallengeType.SPEAKING, 'Speaking'],
  [ChallengeType.SELF_ORGANISED, 'Self organised (routine)'],
  [ChallengeType.WORD_BASED_PROBLEMS, 'Word-based problems'],
  [ChallengeType.MONEY_MANAGEMENT, 'Money management'],
  [ChallengeType.FORWARD_PLANNING, 'Forward planning'],
  [ChallengeType.LANGUAGE_DECODING, 'Language decoding'],
  [ChallengeType.WORD_FINDING, 'Word finding'],
  [ChallengeType.CALM, 'Calm'],
  [ChallengeType.STAMINA, 'Stamina'],
  [ChallengeType.ACTIVE_LISTENING, 'Active listening'],
  [ChallengeType.GRASP, 'Grasp'],
  [ChallengeType.NUMBER_RECALL, 'Number recall'],
  [ChallengeType.ATTENTION_TO_DETAIL, 'Attention to detail'],
  [ChallengeType.SPATIAL_AWARENESS, 'Spatial awareness'],
  [ChallengeType.NON_VERBAL_COMMUNICATION, 'Non-verbal communication'],
  [ChallengeType.TASK_SWITCHING, 'Task switching'],
  [ChallengeType.NUMBER_SEQUENCING, 'Number sequencing'],
  [ChallengeType.PEOPLE_PERSON, 'People person'],

  [ChallengeType.NONE, 'No challenges identified'],
])

const challengeTypeHintTextValues = new Map<ChallengeType, string>([
  [ChallengeType.SENSORY, 'Things like reacting to some environments or situations eg noise or being touched'],
  [ChallengeType.EMOTIONS_FEELINGS_DEFAULT, 'Things like confidence, empathy, managing emotions and impulses'],
  [
    ChallengeType.PHYSICAL_SKILLS_DEFAULT,
    'Things like learning new skills, co-ordination, stamina and fine motor skills',
  ],
  [ChallengeType.LITERACY_SKILLS_DEFAULT, 'Things like reading, writing and spelling'],
  [ChallengeType.NUMERACY_SKILLS_DEFAULT, 'Things like maths and managing money'],
  [ChallengeType.ATTENTION_ORGANISING_TIME_DEFAULT, 'Things like planning, task management, tidiness and focus'],
  [ChallengeType.LANGUAGE_COMM_SKILLS_DEFAULT, 'Things like taking turns, listening and language fluency'],
  [ChallengeType.PROCESSING_SPEED, 'Things like taking time to understand and follow instructions'],
  [ChallengeType.MEMORY, 'Things like remembering and recalling information'],
])

const formatChallengeTypeScreenValueFilter = (value: ChallengeType): string => challengeTypeScreenValues.get(value)

const formatChallengeTypeHintTextFilter = (value: ChallengeType): string => challengeTypeHintTextValues.get(value)

export { formatChallengeTypeScreenValueFilter, formatChallengeTypeHintTextFilter }
