{% extends "../layout.njk" %}

{% set pageId = 'challenge-select-category' %}
{% set pageTitle = "Add challenge - Select a category" %}

{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

      <form class="form" method="post" novalidate="">
        <div class="govuk-form-group">
          <input type="hidden" name="_csrf" value="{{ csrfToken }}" />

          {{ govukRadios({
            name: "category",
            fieldset: {
              legend: {
                text: "Select category",
                isPageHeading: true,
                classes: "govuk-fieldset__legend--l"
              }
            },
            items: [
              {
                value: "LITERACY_SKILLS_DEFAULT",
                text: "LITERACY_SKILLS_DEFAULT" | formatChallengeTypeScreenValue,
                hint: {
                  text: "LITERACY_SKILLS_DEFAULT" | formatChallengeTypeHintText
                },
                checked: form.category === "LITERACY_SKILLS_DEFAULT"
              },
              {
                value: "NUMERACY_SKILLS_DEFAULT",
                text: "NUMERACY_SKILLS_DEFAULT" | formatChallengeTypeScreenValue,
                hint: {
                  text: "NUMERACY_SKILLS_DEFAULT" | formatChallengeTypeHintText
                },
                checked: form.category === "NUMERACY_SKILLS_DEFAULT"
              },
              {
                value: "ATTENTION_ORGANISING_TIME_DEFAULT",
                text: "ATTENTION_ORGANISING_TIME_DEFAULT" | formatChallengeTypeScreenValue,
                hint: {
                  text: "ATTENTION_ORGANISING_TIME_DEFAULT" | formatChallengeTypeHintText
                },
                checked: form.category === "ATTENTION_ORGANISING_TIME_DEFAULT"
              },
              {
                value: "MEMORY",
                text: "MEMORY" | formatChallengeTypeScreenValue,
                hint: {
                  text: "MEMORY" | formatChallengeTypeHintText
                },
                checked: form.category === "MEMORY"
              },
              {
                value: "PROCESSING_SPEED",
                text: "PROCESSING_SPEED" | formatChallengeTypeScreenValue,
                hint: {
                  text: "PROCESSING_SPEED" | formatChallengeTypeHintText
                },
                checked: form.category === "PROCESSING_SPEED"
              },
              {
                value: "LANGUAGE_COMM_SKILLS_DEFAULT",
                text: "LANGUAGE_COMM_SKILLS_DEFAULT" | formatChallengeTypeScreenValue,
                hint: {
                  text: "LANGUAGE_COMM_SKILLS_DEFAULT" | formatChallengeTypeHintText
                },
                checked: form.category === "LANGUAGE_COMM_SKILLS_DEFAULT"
              },
              {
                value: "EMOTIONS_FEELINGS_DEFAULT",
                text: "EMOTIONS_FEELINGS_DEFAULT" | formatChallengeTypeScreenValue,
                hint: {
                  text: "EMOTIONS_FEELINGS_DEFAULT" | formatChallengeTypeHintText
                },
                checked: form.category === "EMOTIONS_FEELINGS_DEFAULT"
              },
              {
                value: "PHYSICAL_SKILLS_DEFAULT",
                text: "PHYSICAL_SKILLS_DEFAULT" | formatChallengeTypeScreenValue,
                hint: {
                  text: "PHYSICAL_SKILLS_DEFAULT" | formatChallengeTypeHintText
                },
                checked: form.category === "PHYSICAL_SKILLS_DEFAULT"
              },
              {
                value: "SENSORY",
                text: "SENSORY" | formatChallengeTypeScreenValue,
                hint: {
                  text: "SENSORY" | formatChallengeTypeHintText
                },
                checked: form.category === "SENSORY"
              }
            ],
            errorMessage: errors | findError('category')
          }) }}
        </div>

        {{ govukButton({
          id: "submit-button",
          text: "Continue",
          type: "submit",
          attributes: {"data-qa": "submit-button"},
          preventDoubleClick: true
        }) }}
      </form>
    </div>
  </div>
{% endblock %}
