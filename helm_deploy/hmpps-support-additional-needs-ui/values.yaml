generic-service:
  nameOverride: hmpps-support-additional-needs-ui
  productId: 'DPS124' # productId for the product that this belongs too, i.e. DPS001, see README.md for details
  serviceAccountName: hmpps-support-additional-needs # Needed to access AWS resources like SQS queues and SNS topics

  replicaCount: 4

  image:
    repository: ghcr.io/ministryofjustice/hmpps-support-additional-needs-ui
    tag: app_version # override at deployment time
    port: 3000

  ingress:
    enabled: true
    hosts:
      - app-hostname.local # override per environment
    tlsSecretName: hmpps-support-additional-needs-ui-cert
    modsecurity_enabled: true # enable OWASP core rules. Handle any false positives by removing or tweaking rules in modsecurity_snippet.
    modsecurity_snippet: |
      # WAF configured in detection-only mode, as per decision in https://dsdmoj.atlassian.net/wiki/spaces/RR/pages/5304352991/ADR-004+Use+modsec+WAF+in+detection-only+mode+for+PLP+UI
      SecAuditEngine On
      SecRuleEngine DetectionOnly
      # GitHub team name to grant access to the OpenSearch logs to be able to delve into the detail and cause
      SecDefaultAction "phase:2,pass,log,tag:github_team=hmpps-support-additional-needs-live"
      # Change default response code to be a 406 so that we can tell easily that it is modsecurity doing the blocking
      SecRuleUpdateActionById 949110 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
      SecRuleUpdateActionById 959100 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
      # Update OWASP rule 942440 (SQL Comment injection via ==) to not apply it to the connect.sid cookie (express) or the _csrf token. Both can legitimately include ==
      SecRuleUpdateTargetById 942440 "!REQUEST_COOKIES:/connect.sid/"
      SecRuleUpdateTargetById 942440 "!ARGS:_csrf"
      # Disable OWASP rule 942230 (SQL injection attempt) as the regex is too strict and prevents sentences containing `case`, `like`, `having` or `if` in them
      SecRuleRemoveById 942230

  livenessProbe:
    httpGet:
      path: /ping

  readinessProbe:
    httpGet:
      path: /ping

  # Environment variables to load into the deployment
  env:
    NODE_ENV: 'production'
    REDIS_ENABLED: 'true'
    REDIS_TLS_ENABLED: 'true'
    TOKEN_VERIFICATION_ENABLED: 'true'
    PRODUCT_ID: 'DPS124'
    AUDIT_SQS_REGION: 'eu-west-2'
    AUDIT_SERVICE_NAME: 'hmpps-support-additional-needs'
    AUDIT_ENABLED: 'true'
    PRISONER_SEARCH_API_DEFAULT_PAGE_SIZE: "9999"
    SEARCH_UI_DEFAULT_PAGINATION_PAGE_SIZE: "50"

    # Comma delimited list of prison IDs that our service is rolled out into (active agencies)
    # Use spaces to aid readability if necessary; these are trimmed when the environment variable is read and processed.
    # When the service is fully rolled out to all prisons replace the comma delimited list with the wildcard ***
    # ACTIVE_AGENCIES: "***"
    # Ref: https://dsdmoj.atlassian.net/wiki/spaces/NDSS/pages/4616488213/Publishing+the+deployment+scope+of+a+product
    ACTIVE_AGENCIES: "***"

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    # These secrets are created by terraform.
    hmpps-support-additional-needs-ui-client-creds:
      CLIENT_CREDS_CLIENT_ID: 'CLIENT_CREDS_CLIENT_ID'
      CLIENT_CREDS_CLIENT_SECRET: 'CLIENT_CREDS_CLIENT_SECRET'
      CURIOUS_API_CLIENT_ID: "CURIOUS_API_CLIENT_ID"
      CURIOUS_API_CLIENT_SECRET: "CURIOUS_API_CLIENT_SECRET"
    hmpps-support-additional-needs-ui-auth-code:
      AUTH_CODE_CLIENT_ID: 'AUTH_CODE_CLIENT_ID'
      AUTH_CODE_CLIENT_SECRET: 'AUTH_CODE_CLIENT_SECRET'
    hmpps-support-additional-needs-ui-session-secret:
      SESSION_SECRET: 'SESSION_SECRET'
    redis:
      REDIS_HOST: 'primary_endpoint_address'
      REDIS_AUTH_TOKEN: 'auth_token'
    hmpps-support-additional-needs-ui-application-insights:
      APPLICATIONINSIGHTS_CONNECTION_STRING: "APPLICATIONINSIGHTS_CONNECTION_STRING"
    sqs-hmpps-audit-secret:
      AUDIT_SQS_QUEUE_URL: 'sqs_queue_url'

  allowlist:
    groups:
      - internal
      - prisons
      - private_prisons
      - prisons-education

generic-prometheus-alerts:
  targetApplication: hmpps-support-additional-needs-ui
